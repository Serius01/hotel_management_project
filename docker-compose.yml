services:
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"

  backend:
    build:
      context: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      - db

  frontend:
    build:
      context: ./hotel_frontend
    command: >
      sh -c "npm install &&
             if [ \"$FRONTEND_ENV\" = \"dev\" ]; then npm run dev -- --host; else npm run build && npx serve -s build -l 3000; fi"
    volumes:
      - ./hotel_frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      FRONTEND_ENV: ${FRONTEND_ENV}

volumes:
  postgres_data:
